ginger {

  passsalt = "C0ncorde!"

  webBaseUrl = "https://golaapi.mobigraph.co/ginger"

  gifConversionTriggerEnabled = false

  requireSignUpActivation = true

  activationMailTemplate = activation-mail-template.html
  accountActivationSubjectLine = "Gola Account activation"

  lowResGifCommand = bash /home/ubuntu/reducefps.sh
  waterMarkCommand = bash /home/ubuntu/watermark.sh
  webPCommand = bash /home/ubuntu/webPConverter.sh

  lowResGenerationIntervalInMinutes = 5

  allow-empty-auth-headers = false


  cf-url = "https://gola-gif-prod-cf.xpresso.me"

  mail{
    host = "smtp.gmail.com"
    port = 587
    fromEmail = "gola.gifs@gmail.com"
    pass = "mobi@2017"
  }

  s3{
    accessKeyId = "AKIAIE56QSHI67MQFRBA"
    accessKeySec = "axu8xWYrW8Vd1oLvGIy2+Q+aywDrQyfIlApnOi2q"
    bucket = gola-gif-store-prod
    connectionMaxIdleMillis = 300000
    connectionTTL = 900000
    maxConnections = 200
    protocol = HTTPS
    useReaper = true
    useRRForStorage = false
    region = "ap-south-1"
  }
}



play.modules {
  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}

play.editor = "http://localhost:63342/api/file/?file=%s&line=%s"

play.i18n {
  # The application languages
  langs = ["en"]
}

play.http {

  port = 9000

  address = 172.31.0.104


  session {
  }

  flash {
  }
}

play.server.netty {
  log.wire = true
  eventLoopThreads = 64
  transport = "native"
  option {
    child {
      SO_SNDBUF = 16384
    }
  }
}

## Filters
# https://www.playframework.com/documentation/latest/Filters
# ~~~~~
# There are a number of built-in filters that can be enabled and configured
# to give Play greater security.  You must enable this by adding to build.sbt:
#
# libraryDependencies += filters
#
play.filters {
  gzip {

    # The buffer size to use for gzipped bytes
    bufferSize = 8k

    # The maximum amount of content to buffer for gzipping in order to calculate the content length before falling back
    # to chunked encoding.
    chunkedThreshold = 100k

  }

  cors {
    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = null
    allowedHttpMethods = ["GET", "POST", "DELETE"]
    exposedHeaders = ["X-Job-Token", "Retry-After"]
    preflightMaxAge = 3 days
  }

  ## CSRF Filter
  # https://www.playframework.com/documentation/latest/ScalaCsrf#Applying-a-global-CSRF-filter
  # https://www.playframework.com/documentation/latest/JavaCsrf#Applying-a-global-CSRF-filter
  # ~~~~~
  # Play supports multiple methods for verifying that a request is not a CSRF request.
  # The primary mechanism is a CSRF token. This token gets placed either in the query string
  # or body of every form submitted, and also gets placed in the users session.
  # Play then verifies that both tokens are present and match.
  csrf {
    # Sets the cookie to be sent only over HTTPS
    #cookie.secure = true

    # Defaults to CSRFErrorHandler in the root package.
    #errorHandler = MyCSRFErrorHandler
  }
}










play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"

play.crypto.secret = "iwrNwnxIlR6CTf90Latabg:5241ABR5W:1uDFN"



mongo {
  db {
    #host = 172.31.7.19
    #    host = goladev.mobigraph.co
    #    host = 18.220.79.118
    #    uris = """goladev.mobigraph.co:27017,18.220.79.118:27017"""
    uris = """172.31.11.146:7273"""
    port = 7273
    user = "gingeradmin"
    pwd = "c0ncorde",
    name = "gingerdb"
    conn-pool.min = 3
    conn-pool.max = 8
    conn-pool.conn-idle-time-minutes  = 60
  }
}

google{
  clientId = "802025194036-nk9ebs1d9sc4em80ore73oavctb75esk.apps.googleusercontent.com"
  #  clientId = "802025194036-je03hakat8n7m2bq1b00jl5vm1chq3pt.apps.googleusercontent.com"
  #clientSecret = "Ia_HMIjBvZGbrbQpxNzcmmXp"
  clientSecret = "Ia_HMIjBvZGbrbQpxNzcmmXp"
  redirectUrl = "https://violet.mobigraph.co/ginger/gauth/oauth2callback"
}

facebook{

  clientId = "150881638828174"
  clientSecret = "e474b63c9b6953319c0e09a71384f0d0"
  redirectUrl = "https://goladev.mobigraph.co/ginger/fauth/oauth2callback"
}